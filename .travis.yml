language: cpp
dist: xenial

script:
  - mkdir build && cd build
  - cmake -DCMAKE_BUILD_TYPE=Release ..
  - cmake --build . --config Release
  - ctest -V -C Release

before_script:
  - eval "${MATRIX_EVAL}"
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then export SIZE_FLAG=1; export VERSION_FLAG=1; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export SIZE_FLAG=2; export VERSION_FLAG=2; fi
  - cmake --version
  - python --version
  - clinfo
  - pushd .
  - cd data/a/
  - python a.py
  - popd
  - pushd .
  - cd data/b/
  - python b.py
  - popd
  - pushd .
  - cd data/c/
  - python c.py
  - popd

matrix:
  include:

    ######## OSX CLANG ########
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++"
      before_install:
        - brew install llvm@3.9 && brew link --overwrite llvm@3.9 --force
      install: &mac_extra
        - brew install clinfo
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++"
      before_install:
        - brew install llvm@4 && brew link --overwrite llvm@4 --force
      install: *mac_extra
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++"
      before_install:
        - brew install llvm@5 && brew link --overwrite llvm@5 --force
      install: *mac_extra
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++"
      before_install:
        - brew install llvm@6 && brew link --overwrite llvm@6 --force
      install: *mac_extra
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-7 && CXX=clang++"
      before_install:
        - brew install llvm@7 && brew link --overwrite llvm@7 --force
        - export PATH="/usr/local/opt/llvm/bin:$PATH"
        - export LDFLAGS="-L/usr/local/opt/llvm/lib"
        - export CPPFLAGS="-I/usr/local/opt/llvm/include"
      install: *mac_extra

    ######## OSX GCC ########
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
      before_install:
        - brew install gcc@4.9
      install: *mac_extra
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      before_install:
        - brew install gcc@5
      install: *mac_extra
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
      before_install:
        - brew install gcc@6
      install: *mac_extra
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      before_install:
        - brew install gcc@7
      install: *mac_extra
    - os: osx
      osx_image: xcode10
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      before_install:
        - brew install gcc@8
      install: *mac_extra

    ######## LINUX CLANG ########
    - os: linux
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-3.9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-3.9
            - libomp-dev
      install: &linux_extras
        - sudo apt-get install opencl-headers clinfo
        - source scripts/intel_opencl_install.sh
        - source scripts/cmake_install.sh
    - os: linux
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-4.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-4.0
            - libomp-dev
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-5.0
            - libomp-dev
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-6.0
            - libomp-dev
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=clang-7 && CXX=clang++-7"
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-7 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-7
            - libomp-dev
      install: *linux_extras

    ######## LINUX GCC ########
    - os: linux
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-4.9
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-5
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-6
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-7
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-8
      install: *linux_extras
    

    # SONARCLOUD
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
        sonarcloud:
          organization: "zialus-github"
          token:
            secure: "IhZuTm2oh+6aKimykUcMXFqWIks5ET6Ytjg1/u+qUxuWu0iKoxPYLwoSqsyUmGlFrMig934TpfhkhVr94edrH2RKxT7+MUeq0tAYqSSHaWlBp5sI3YZWjNmHQmyiyTXyjP1zxbLTBqzYkXrpu/ox4pPR1BLFLHj34CS9GX88OGSRwHfEBHDXygbPGTarOrfJKSWqQxpmrtN3mJHiiSKG7vFc9xUIqDseNIF3NFomhiS8wb0RMbmQpBc/2qHqot2GgvS7TbaddsyNcoUbS/dshJiL91KvN/1yoWgHZtu+o3brEm0UaMdVgCkXnkmXL/cRkOmU5AJ7ZG47640PfssTKX223z7JkxGfg0ZcAKz9Ljup/jMDCZkn5bMqJFduAHfzYRvYD6qDiRI3HHvg3IMt7TS3CBsRyOxwULNpr2HkTiVfJNE8q8h+MSNr7byRSQf9YUgU+nd6n2x8UIerYtNkwftuiq5CZF6iXV+S62WTE0sDuB1b+AupMokGX//Koh4TJWixUDERkwC564d0kuj75Gt97VRn3GPqyyQKJgGaFiNHyjU1sRhZYoqasCguxljmCQmOEFw+trXlRhMcfvgGgleFqE1247OWgUNylDuLlCiKBnXxmjuiUE6sK3ON3rmHXSApUwdGAwZ2vGbRGfXEkFz3wQAqm6bgAtfQ+j+nW9M="
      script:
        - mkdir build && cd build
        - cmake -DCMAKE_BUILD_TYPE=Release ..
        - build-wrapper-linux-x86-64 --out-dir bw-output make clean all
        - ctest -V -C Release
        - cd ..
        - sonar-scanner
      install: *linux_extras
      env:
        - SONAR_CLOUD="YUP"
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

    # COVERITY_SCAN
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
        coverity_scan:
          project:
            name: "Zialus/cdmf"
            description: "cdmf"
          notification_email: raulmendesferreira@gmail.com
          build_command_prepend: "mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release .."
          build_command: "make"
          branch_pattern: master
      install: *linux_extras
      script:
        - echo "Coverity Scan"
      env:
        - secure: "gjl98kAMxIEA/SB9FAbHkdpUjnvpvLZVpkcj+GlElyNMye+6fiQYILpVUU4QdGEA+5m8IrATvhusci79MymRg3XALahnwPKSDAPek8DlhvJf828S7KovsiexL82G1ULMxQfT3UZZ76QfYze2HAab8RJ3/EaOKFXKCpAQzZAdGCMSrj3SVeCHprYNU2lVK/eQ+o+amL82h7cogWH1LHpa0v3kT8TwPuewiT/BkJ7t1HbbEUss9eRdTTQc0S76yaFjQHPhtNP/lFnYhQbp9HreNdZwfd9CKp+odvRnwbx1lRsjQfPWM5WM6udBu1nnMHklYyN5PcSBUFgfGU1gjvjKVynfNFT1hnPrDX1gei42VKBiA6XiAOCXqCJ4nfzHia2j707HCWUXsURQ8U6L98Pt/bUNShIG9U/g62S6e14ubdCjQVpnMwvz18UZgJhboT0U7ZeS16c3dMG1MQ5BieI7DHFFYOEF3UjXUm7Xl/0bzja8FHXCcAc24lITTr27QcQ03u2mw8hrVPHIsewy5zRI+44cuThCTfWmdmOvw7oFkm4oE3QBFFNtV3MVzimZ3OYY0ri9K0YUPNhhnrsBYickgMC5j40gSjizCKJ1sf3g+owrMap7EAiXeT+xN8VRnRpgKx+C8C5Wu7Wy+xlrhnRqZqBxJUSJEfNU1yedF8KTGj8="
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
